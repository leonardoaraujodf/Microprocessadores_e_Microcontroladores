Data: 22/03/2017
Nome: Leonardo Amorim de Araújo
Matrícula: 15/0039921



1. Dada uma variável 'a' do tipo 'char' (um byte), escreva os trechos de código em C para:


	(a) Somente setar o bit menos significativo de 'a'.

	a |= BIT0; 

	(b) Somente setar dois bits de 'a': o menos significativo e o segundo menos significativo.

	a |= BIT1 + BIT0; 

	(c) Somente zerar o terceiro bit menos significativo de 'a'.
	
	a &= ~(BIT2);


	(d) Somente zerar o terceiro e o quarto bits menos significativo de 'a'.

	a &= ~(BIT2) & ~(BIT3);


	(e) Somente inverter o bit mais significativo de 'a'.

	a ^= BIT7;

	(f) Inverter o nibble mais significativo de 'a', e setar o nibble menos significativo de 'a'. 

	a ^= BIT7 + BIT6 + BIT5 + BIT4; /*Fazendo uma operação de XOR com 1111 0000*/
	a |= BIT3 + BIT2 + BIT1 + BIT0; /*Fazendo uma operação de OU com 0000 1111*/




2. Considerando a placa Launchpad do MSP430, escreva o código em C para piscar os dois LEDs ininterruptamente.

#include <msp430g2553.h>

void main (void)
{
	WDTCTL = WDTPW | WDTHOLD;
	PIDIR = 0x41;
	PIOUT = 0X41;
	for(;;)
	{
	}
}


3. Considerando a placa Launchpad do MSP430, escreva o código em C para piscar duas vezes os dois LEDs sempre que o usuário pressionar o botão.

#include <msp430g2553.h>
#define BTN BIT2
#define LED1 BIT0
#define LED2 BIT6

void main (void)
{
	WDTCTL = WDTPW | WDTHOLD;
	PIOUT = 0;
	PIDIR = LED1 + LED2;
	for(;;)
	{
	    if(PIIN & BTN == 0)
	    {
		PIOUT |= LED1 + LED2;
		PIOUT &= ~(LED1 + LED2);
		PIOUT |= LED1 + LED2;
		PIOUT &= ~(LED1 + LED2);
	    }
	    else
		PIOUT = 0;

	}
}


4. Considerando a placa Launchpad do MSP430, faça uma função em C que pisca os dois LEDs uma vez.

#include <msp430g2553.h>
#define BTN BIT2
#define LED1 BIT0
#define LED2 BIT6

void Acende_led ()
{
	PIDIR = LED1 + LED2;
	PIOUT |= LED1 + LED2;

}


5. Reescreva o código da questão 2 usando a função da questão 4.

#include <msp430g2553.h>
#define BTN BIT2
#define LED1 BIT0
#define LED2 BIT6

void Acende_led()
{
	PIDIR = LED1 + LED2;
	PIOUT |= LED1 + LED2;

}

void main (void)
{
	WDTCTL = WDTPW | WDTHOLD;
	Acende_led();
	for(;;)
	{   
	}
}



6. Reescreva o código da questão 3 usando a função da questão 4.


#include <msp430g2553.h>
#define BTN BIT2
#define LED1 BIT0
#define LED2 BIT6

void Acende_led()
{
	PIDIR = LED1 + LED2;
	PIOUT |= LED1 + LED2;

}

void main (void)
{
	WDTCTL = WDTPW | WDTHOLD;
	PIOUT = 0;
	PIDIR = LED1 + LED2;
	for(;;)
	{
	    if(PIIN & BTN == 0)
	    {
		Acende_led();
		PIOUT &= ~(LED1 + LED2);
		Acende_led();
		PIOUT &= ~(LED1 + LED2);
	    }
	    else
		PIOUT = 0;

	}
}
