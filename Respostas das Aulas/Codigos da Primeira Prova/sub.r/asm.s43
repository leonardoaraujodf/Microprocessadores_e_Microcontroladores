#include "msp430.h"                     ; #define controlled include file

        NAME    main                    ; module name

        PUBLIC  main                    ; make the main label vissible
                                        ; outside this module
        ORG     0FFFEh
        DC16    init                    ; set reset vector to 'init' label

        RSEG    CSTACK                  ; pre-declaration of segment
        RSEG    CODE                    ; place program in 'CODE' segment

init:   MOV     #SFE(CSTACK), SP        ; set up stack

main:   NOP                             ; main program
        MOV.W   #WDTPW+WDTHOLD,&WDTCTL  ; Stop watchdog timer
        MOV.W   #0x0a00,R15              ;
        MOV.W   #5,0(R15)
        MOV.W   #5,2(R15)
        MOV.W   #2,R14                  ;
        CALL    #Subr_1                 ;
        JMP $                           ; jump to current location '$'
                                        ; (endless loop)
Subr_1: 
        TST     R14
        JNZ     Subr_1_else
        CLR     R15
        RET
        
Subr_1_else:
        PUSH    0(R15)
        INCD    R15
        DEC     R14
        CALL    #Subr_1
        POP     R14
        ADD     R14,R15
        RET
        
        END
